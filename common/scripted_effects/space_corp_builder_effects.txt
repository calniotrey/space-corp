#this = corp
create_builder_fleet = {
    get_headquarters = yes
    subtract_variable = { which = space_corp_money value = @builder_cost }
    create_fleet = {
        name = random
        effect = {
            set_owner = prev
            set_name = random
            set_location = event_target:headquarters_planet
            create_ship = { name = random random_existing_design = constructor }
            set_builders_orders = yes
        }
    }
}

# this = builder fleet
set_builders_orders = {
    log = "set_builders_orders.1"
    if = {
        limit = {
            exists = orbit
            orbit = {
                has_deposit_for = shipclass_mining_station
                has_mining_station = no
            }
        }
        log = "set_builders_orders.2"
        if = {
            limit = {
                owner = {
                    check_variable = { which = space_corp_money value >= space_corps_mining_station_total_cost }
                }
            }
            owner = { # TODO check if subtract works
                log = "Checking money"
                # log = "Money : [This.space_corp_money] before removing [This.space_corps_mining_station_total_cost]"
                subtract_variable = { which = space_corp_money value = space_corps_mining_station_total_cost }
                # log = "Money : Now has [This.space_corp_money]"
                if = {
                    limit = {
                        exists = overlord
                    }
                    change_variable = { which = total_payed_for_licenses value = space_corps_mining_license_cost }
                    overlord = {
                        change_variable = { which = total_received_from_licenses value = space_corps_mining_license_cost }
                        add_variable_resource = { RESOURCE = energy AMOUNT = space_corps_mining_license_cost }
                    }
                }
            }
            orbit = {
                create_mining_station = {
					owner = prev.owner
				}
            }
        }
    } else_if = {
        limit = {
            exists = orbit
            orbit = {
                has_deposit_for = shipclass_research_station
                has_research_station = no
            }
        }
        log = "set_builders_orders.3"
        # TODO build research stations
        # TODO advanced stations
    } else_if = { # find new destination
        limit = {
            exists = solar_system # if not, it means the fleet is currently ftl, so we will wait
            exists = owner.overlord # if overlord is disconnected, we wait for reconnection
        }
        log = "set_builders_orders.4"
        if = {
            limit = {
                owner.overlord = {
                    space_corp_searches_mining_stations = yes
                }
                solar_system = {
                    is_system_eligible_for_mining_station = yes
                }
            }
            log = "set_builders_orders.5"
            builders_find_local_mining_station = yes
        } else_if = {
            limit = {
                owner.overlord = {
                    space_corp_searches_research_stations = yes
                }
                solar_system = {
                    is_system_eligible_for_research_station = yes
                }
            }
            log = "set_builders_orders.5"
            builders_find_local_research_station = yes
        } else_if = { # TODO put local search for advanced?
            limit = {
                owner.overlord = {
                    space_corp_searches_mining_stations = yes
                }
                has_close_system_eligible_for_mining_station = yes
            }
            log = "set_builders_orders.6"
            builders_find_close_mining_station = yes
        } else_if = {
            limit = {
                owner.overlord = {
                    space_corp_searches_research_stations = yes
                }
                has_close_system_eligible_for_research_station = yes
            }
            builders_find_close_research_station = yes
        }
    }
    log = "set_builders_orders.7"
    if = {
        limit = {
            exists = event_target:builder_destination
        }
        log = "set_builders_orders.8"
        queue_actions = {
            move_to = event_target:builder_destination
            orbit_planet = event_target:builder_destination
        }
        # auto_move_to_planet = {
        #     target = event_target:builder_destination
        #     clear_auto_move_on_arrival = yes
        #     arrival_effect = set_builders_orders
        # }
    }
    log = "set_builders_orders.9"
    save_event_target_as = builder_fleet
    owner = {
        country_event = {
            id = space_corps_builder.10
            days = 30
            random = 30
        }
    }
}

# this = fleet
builders_find_local_mining_station = {
    solar_system = {
        random_system_planet = {
            limit = {
                is_planet_eligible_for_mining_station = yes
            }
            save_event_target_as = builder_destination
        }
    }
}

# this = fleet
builders_find_local_research_station = {
    solar_system = {
        random_system_planet = {
            limit = {
                is_planet_eligible_for_research_station = yes
            }
            save_event_target_as = builder_destination
        }
    }
}

#TODO switch to random?
# this = fleet
builders_find_close_mining_station = {
    closest_system = {
        min_steps = 1
        max_steps = @builder_close_system
        limit = {
            is_system_eligible_for_mining_station = yes
        }
        random_system_planet = {
            limit = {
                is_planet_eligible_for_mining_station = yes
            }
            save_event_target_as = builder_destination
        }
    }
}

# this = fleet
builders_find_close_research_station = {
    closest_system = {
        min_steps = 1
        max_steps = @builder_close_system
        limit = {
            is_system_eligible_for_research_station = yes
        }
        random_system_planet = {
            limit = {
                is_planet_eligible_for_research_station = yes
            }
            save_event_target_as = builder_destination
        }
    }
}